% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/profiles.R
\name{community_profiles}
\alias{community_profiles}
\alias{community_profiles.default}
\alias{community_profiles.communities}
\title{Calculate community profiles}
\usage{
community_profiles(x, communities, self)

\method{community_profiles}{default}(x, communities, self = TRUE)

\method{community_profiles}{communities}(x, communities, self = TRUE)
}
\arguments{
\item{x}{a matrix of citations (from columns to rows) or an \code{igraph} object}

\item{communities}{an integer vector giving the community of each journal, or a \code{list} of members in each community. See examples.}

\item{self}{logical. Include self-citations? If \code{FALSE}, they will not be counted.}
}
\value{
A matrix of community profiles.
}
\description{
Given a citation data set, calculate the \emph{community profiles} --- the vector of probabilities
that a community cites each of the journals in the network.
}
\details{
Currently this function calculates a community's profile from the (unweighted) mean of its
consistuent journal profiles. More sophisticated approaches might be more appropriate, because this means
that very large journals with many outgoing citations carry equal weight to small journals with very
few citations. Currently journals cannot belong to more than one community at a time.
}
\examples{
test <- citations[1:6, 1:6]
community_profiles(test, c(3, 3, 1, 3, 2, 3), self = FALSE)
community_profiles(test,
                   list(`1` = 'AoS', `2` = 'Bern', `3` = c('AmS', 'AISM', 'ANZS', 'BioJ')),
                   self = FALSE)
}
\seealso{
\code{\link{cprofile}}, \code{\link{nearest_point}}
}
