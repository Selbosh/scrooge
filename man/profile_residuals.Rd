% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/residuals.R
\name{profile_residuals}
\alias{profile_residuals}
\title{Calculate Pearson profile residuals}
\usage{
profile_residuals(expected, observed)
}
\arguments{
\item{expected}{Predicted vector of citations, based on some model}

\item{observed}{Vector of observed citations from the journal of interest}
}
\value{
A numeric vector of standardised residuals, the same length as \code{expected} and \code{observed}
}
\description{
Residuals are calculated using the formula
\deqn{r_i = \frac{y_i - \hat{y}_i}{\sqrt{\hat{y}_i}}}{(y_i - E[y_i]) / \sqrt{E[y]_i}}
which treats each element of the citation counts vector as a Poisson variate.
If the expected value is zero, \code{NA} is returned.
(You can decide for yourself whether to omit these observations, treat them as zero or use some other approach.)
}
\details{
We might want to make a generic S3 function like \code{\link[stats:residuals]{stats::residuals()}}.
\emph{Deviance} residuals may be added later. For now we have Pearson residuals only.
}
\examples{
# Compare citations of 'Biometrika' to those of all stats journals
Bka_counts <- citations[, 'Bka']
average_profile <- rowSums(citations) / sum(citations)
expected_counts <- average_profile * sum(Bka_counts)
profile_residuals(expected_counts, Bka_counts)

}
\references{
Agresti, Alan (2002).
\emph{Categorical Data Analysis} (2nd ed., pp. 366--367).
New York, NY: Wiley.
}
\seealso{
\code{\link[stats:rstandard.glm]{stats::rstandard.glm()}}

Other functions for residual analysis of communities: \code{\link{community_residuals}},
  \code{\link{fitted_citations}}
}
