library(mypackage)
library(devtools)
install_github("klutometis/roxygen")
install.packages('roxygen2')
install.packages("roxygen2")
install_github("klutometis/roxygen")
devtools::install_github("klutometis/roxygen")
library(mypackage)
hello()
detach(mypackage, unload=TRUE)
install.packages('testthat')
library(mypackage)
library(mypackage)
?mypackage
library(mypackage)
library(mypackage)
library(mypackage)
?hello
roxygen2::roxygenise()
roxygen2::roxygenise()
?hello
roxygen2::roxygenise()
?hello
devtools::document()
roxygen2::roxygenise()
?roxygen2
vignette("roxygen2", package = "roxygen2")
library(roxygen2)
vignette("roxygen2", package = "roxygen2")
vignette(roxygen2)
vignette(roxygen)
library(mypackage)
?hello
library(mypackage)
paste('hello',NULL)
paste('hello',NULL)
paste('hello',NULL)
library(mypackage)
hello()
?hello
library(mypackage)
?hello
hello()
library(mypackage)
?hello
hello()
library(mypackage)
?selby
??selby
hello()
?warnings
warnings()
library(mypackage)
hello('friend')
hello('David')
hello()
exists(hello)
?exists
library(mypackage)
hello()
?roxygen2
?+
l
?round
mode(c(1,2,3))
class(c(1,2,3))
typeof(c(1,2,3))
typeof(data.frame(c(1,2,3)))
class(data.frame(c(1,2,3)))
mode(data.frame(c(1,2,3)))
pi
1:5/3
1:5 + 1e-7
1:5 + 1e-6
round(1:5 + 1e-6, 5)
1:5 == 1:5
all(1:5 == 1:5)
1:5 + 0.01 == 1:5
library(mypackage)
?verify
pi %=% 3.151593
round(pi)
round(pi,5)
pi %=% 3.141593
1/3 %=% 0.333333
(1/3) %=% 0.333333
0.33333 %=% 1/3
0.333333 %=% (1/3)
all(1:5 + 1e-6 %=% c(1, 2, 3, 4, 5))
all(1:5 + rnorm(5, sd = 1e-5) %=% c(1, 2, 3, 4, 5))
1/9
1/11
1/111/36
1/100
1/101
1/99
99/100
100/99
101/99
1/3
.9999999999999999
.99999
.99999 * 10
9* 0.777777
verify(0.777777 * 9, 7)
library(mypackage)
verify(1,2
)
library(mypackage)
?verify
?verify
library(mypackage)
library(mypackage)
?approx
library(mypackage)
?approx
?equalish
?isapprox
library(mypackage)
?equalish
verify(0.777777 * 9, 7)
verify(0.777777777 * 9, 7)
verify(0.7777777 * 9, 7)
?mypackage
library(mypackage)
?mypackage
?length
BradleyTerry2::citations
?scale
is.matrix()
?is.matrix
?stopifnot
replicate(1:5, 3)
replicate(3, 1:5)
?eigs
rARPACK::eigs
devtools::use_package('rARPACK')
library(mypackage)
?PageRank
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
cit <- BradleyTerry2::citations
is.matrix(cit)
PageRank(cit)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
as.matrix(cit)
matrix(cit)
as.matrix(cit)
matrix(cit)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
library(mypackage)
?matrix
length(BradleyTerry2::citation)
length(BradleyTerry2::citations)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
?rARPACK::eigs
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
abs(1+2i)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
?c
library(mypackage)
?mypackage
cit <- BradleyTerry2::citations
PageRank(cit)
sum(cit)
sum(PageRank(cit))
library(mypackage)
library(mypackage)
sort(c(1,4,3))
?sort
?ifelse
library(mypackage)
?PageRank
library(mypackage)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
library(mypackage)
cit <- BradleyTerry2::citations
PageRank(cit)
PageRank(cit, sort = TRUE)
PageRank/colSums(cit)
colSums(cit)
PR <- PageRank(cit)
PR/colSums(cit)
SF <- PR/colSums(cit)
SF <- SF/sum(SF)
SF
sort(SF)
sort(SF, decreasing=TRUE)
devtools::use_testthat()
?context
?test_check
PageRank(BradleyTerry2::citations)
order(PageRank(BradleyTerry2::citations))
?expect
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
?test_that
?testthat::testthat
library(mypackage)
?mypackage
library(testthat)
?testthat
library(mypackage)
?mypackage
??mypackage
help(mypackage)
?@docTy[e]
?@docType
?'@docType'
?roxygen2
library(mypackage)
?mypackage
library(mypackage)
library(mypackage)
library(mypackage)
citations <- BradleyTerry2::citations
getwd()
save(citations, 'data/citations.RData')
save('data/citations.RData', citations)
?save
save(file = 'data/citations.RData', citations)
save(file = 'data/citations.RData', citations)
library(mypackage)
library(mypackage)
citations
citations[1]
library(mypackage)
library(mypackage)
?mypackage
library(mypackage)
"%v%" <- function(a,b) a + b
4 %v% 5
add <- %v%
add <- '%v%'
add(4, 5)
add
add <- function(a, b) a + b
add(4,5)
'%a%' <- add
4 %a% 5
library(mypackage)
source('~/GitHub/mypackage/R/verify.R')
library(mypackage)
?verify
?dplyr::summarise_each_q
library(mypackage)
library(mypackage)
is.equal
?is.equal
??is.equal
?identical
?isTRUE
library(mypackage)
?verify
all.equal(1:5 + rnorm(5, sd=1e-5), 1:5)
all.equal(1:5 + 1e-5, 1:5)
install.packages('ggthemes')
?ggthemes::excel_pal
library(ggplot2)
library(ggthemes)
diamonds
?diamonds
ggplot(diamonds) + aes(carat, price, colour = cut) + geom_point()
ggplot(diamonds) + aes(carat, price, colour = cut) + geom_point() + theme_excel()
?plot
diff(c(3,4))
range(1:5)
library(mypackage)
?linearScale
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
?asciiplot
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length'), geom='point')
?identity
iris$Species
as.numeric(iris$Species)
c('X','O','+','E')[iris$Species]
library(mypackage)
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length'), geom=c('point', 'shape'))
library(mypackage)
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length'), geom=c('point', 'shape'))
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom=c('point', 'shape'))
debug(asciiplot)
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom=c('point', 'shape'))
debug(print.asciiplot)
ap <- asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom=c('point', 'shape'))
undebug(asciiplot)
ap
ap <- asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom=c('point', 'shape'))
library(mypackage)
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom=c('point', 'shape'))
library(mypackage)
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom='point')
library(mypackage)
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom='point')
library(mypackage)
asciiplot(iris, aes=list(x='Sepal.Width', y='Sepal.Length', shape='Species'), geom='point')
asciiplot(iris, aes=list(x='Sepal.Width', y='Petal.Width', shape='Species'), geom='point')
ap <- asciiplot(iris, aes=list(x='Sepal.Width', y='Petal.Width', shape='Species'), geom='point')
ap$scales$y <- logScale
ap
logScale(1:5)
linearScale(1:5)
ap$scales
ap$scales$x <- linearScale
ap
diamonds
str(diamonds)
asciiplot(diamonds, aes=list(x='carat', y='price', shape='cut'), geom='point')
di <- asciiplot(diamonds, aes=list(x='carat', y='price', shape='cut'), geom='point')
di$scales <- list(x = linearScale, y = logScale)
di
ggplot(diamonds, aes(carat, price, shape=cut)) + geom_point()
ggplot(diamonds, aes(carat, price, shape=cut)) + geom_point() + scale_y_log10()
ggplot(diamonds, aes(carat, price, colour=cut)) + geom_point() + scale_y_log10()
levels(diamonds$cut)
unique(diamonds$cut)
library(mypackage)
?asciiplot
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
library(mypackage)
?ascii
??ascii
asciiplot(ggplot2::diamonds, aes=list(x='carat', y='price', shape='cut'), geom='point')
asciiplot(ggplot2::diamonds, aes=list(x='carat', y='price', shape='cut'), geom='point')
library(mypackage)
library(mypackage)
ap <- asciiplot(ggplot2::diamonds, aes=list(x='carat', y='price', shape='cut'), geom='point')
ap$height <- 50
ap
library(mypackage)
library(mypackage)
asciiplot(ggplot2::diamonds, aes=list(x='carat', y='price', shape='cut'), geom='point')
ap <- asciiplot(ggplot2::diamonds, aes=list(x='carat', y='price', shape='cut'), geom='point')
ap$height <- 50
ap
ap$height <- 55
ap
ap$height <- 60
ap
ap$height <- 61
ap
asciiplot(iris, geom = 'point')
library(mypackage)
asciiplot(iris, geom = 'point')
asciiplot(iris, aes = list(x = 'Sepal.Width', y = 'Sepal.Length') geom = 'point')
asciiplot(iris, aes = list(x = 'Sepal.Width', y = 'Sepal.Length'), geom = 'point')
asciiplot(iris, aes = list(x = 'Sepal.Width', y = 'Sepal.Length', shape = 'Species'), geom = 'point')
asciiplot(iris, aes = list(x = 'Sepal.Width', y = 'Sepal.Length', shape = 'Species'), geom = 'point')
asciiplot(iris, aes = list(x = 'Petal.Width', y = 'Petal.Length', shape = 'Species'), geom = 'point')
C <- Matrix(citations, nrow(citations), ncol(citations), dimnames = dimnames(citations))
